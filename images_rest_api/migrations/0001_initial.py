# Generated by Django 4.2.4 on 2023-09-29 17:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import images_rest_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=64, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
            ],
            options={
                'verbose_name': 'custom user',
                'verbose_name_plural': 'custom users',
            },
            managers=[
                ('objects', images_rest_api.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ThumbnailSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=164)),
                ('system_name', models.CharField()),
                ('image', models.ImageField(upload_to='users-images')),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Size')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_photos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('orginal_image_link', models.BooleanField(default=False)),
                ('time_limited_link', models.BooleanField(default=False)),
                ('thumbs', models.ManyToManyField(to='images_rest_api.thumbnailsize')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='account_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='images_rest_api.accounttype'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(choices=[], verbose_name='Size')),
                ('image', models.ImageField(upload_to='users-images/thumbs')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_thumbnails', to=settings.AUTH_USER_MODEL)),
                ('system_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='images_rest_api.userimage')),
            ],
            options={
                'ordering': ['size'],
                'unique_together': {('system_name', 'size')},
            },
        ),
    ]
